{"version":3,"sources":["components/Camera.js","components/CameraStyles.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignItems","justifyContent","height","backgroundColor","paper","padding","spacing","textAlign","maxWidth","boxShadow","cameraBox","position","marginBottom","alignContent","captureButton","color","borderRadius","deleteButton","top","right","img","maxHeight","objectFit","transform","title","fontWeight","fontSize","CameraStyles","Camera","classes","useState","source","setSource","imageRotation","setImageRotation","webcamRef","useRef","className","Container","Paper","elevation","imageBox","src","alt","style","IconButton","component","onClick","audio","mirrored","ref","screenshotFormat","accept","type","capture","onChange","e","target","files","length","file","newUrl","URL","createObjectURL","handleCapture","id","htmlFor","screenshot","current","getScreenshot","App","config","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.72301921.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Container, Paper, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCameraRoundedIcon from \"@material-ui/icons/PhotoCameraRounded\";\r\nimport DeleteOutlineRoundedIcon from \"@material-ui/icons/DeleteOutlineRounded\";\r\nimport Webcam from \"react-webcam\";\r\nimport { CameraStyles } from './CameraStyles'; // Import the styles\r\n\r\nconst useStyles = makeStyles((theme) => CameraStyles(theme));\r\n\r\nfunction Camera() {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState(\"\");\r\n  const [imageRotation, setImageRotation] = useState(0);\r\n  const webcamRef = useRef(null);\r\n\r\n  const handleCapture = (target) => {\r\n    if (target.files) {\r\n      if (target.files.length !== 0) {\r\n        const file = target.files[0];\r\n        const newUrl = URL.createObjectURL(file);\r\n        setSource(newUrl);\r\n        setImageRotation(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setSource(\"\");\r\n    setImageRotation(0);\r\n  };\r\n\r\n  const handleCaptureFromCamera = () => {\r\n    const screenshot = webcamRef.current.getScreenshot();\r\n    setSource(screenshot);\r\n    setImageRotation(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <h2 className={classes.title}>Capture Your Picture here</h2>\r\n          <div className={classes.cameraBox}>\r\n            {source ? (\r\n              <div className={classes.imageBox}>\r\n                <img\r\n                  src={source}\r\n                  alt=\"snap\"\r\n                  className={classes.img}\r\n                  style={{ transform: `rotate(${imageRotation}deg)` }}\r\n                />\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  component=\"span\"\r\n                  className={classes.deleteButton}\r\n                  onClick={handleDelete}\r\n                >\r\n                  <DeleteOutlineRoundedIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </div>\r\n            ) : (\r\n              <Webcam\r\n                audio={false}\r\n                mirrored={true}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                className={classes.img}\r\n              />\r\n            )}\r\n            <input\r\n              accept=\"image/*\"\r\n              type=\"file\"\r\n              capture=\"environment\"\r\n              onChange={(e) => handleCapture(e.target)}\r\n              id=\"icon-button-file\"\r\n              style={{ display: \"none\" }}\r\n            />\r\n            {!source && (\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.captureButton}\r\n                  onClick={handleCaptureFromCamera}\r\n                >\r\n                  <PhotoCameraRoundedIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </label>\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Camera;\r\n","export const CameraStyles = (theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      height: \"100vh\",\r\n      backgroundColor: \"#f5f5f5\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(5),\r\n      textAlign: \"center\",\r\n      maxWidth: \"50%\",\r\n      boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\",\r\n      height: \"400px\"\r\n    },\r\n    cameraBox: {\r\n      position: \"relative\",\r\n      marginBottom: theme.spacing(2),\r\n      alignContent: \"center\"\r\n    },\r\n    captureButton: {\r\n      backgroundColor: \"black\",\r\n      color: \"white\",\r\n      borderRadius: \"50%\",\r\n      padding: theme.spacing(3),\r\n      boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.1)\",\r\n      '&:hover': {\r\n        backgroundColor: \"#45A049\",\r\n      },\r\n    },\r\n    deleteButton: {\r\n      position: \"absolute\",\r\n      top: \"-20px\",\r\n      right: \"-20px\",\r\n      backgroundColor: \"#FF5252\",\r\n      color: \"white\",\r\n      borderRadius: \"50%\",\r\n      padding: theme.spacing(2),\r\n      '&:hover': {\r\n        backgroundColor: \"#E53935\",\r\n      },\r\n    },\r\n    img: {\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"70vh\",\r\n      objectFit: \"contain\",\r\n      transform: \"rotate(0deg)\",\r\n    },\r\n    title: {\r\n      marginBottom: theme.spacing(2),\r\n      color: \"#333\",\r\n      fontWeight: \"bold\",\r\n      fontSize: \"24px\",\r\n    },\r\n  });\r\n  ","import React from 'react';\nimport Camera from './components/Camera'; \n\n\nfunction App() {\n  return (\n    <div>\n      <Camera />\n    </div>\n  );\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      \n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}